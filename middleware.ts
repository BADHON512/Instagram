import { NextResponse } from 'next/server'
import type { NextRequest } from 'next/server'

export function middleware(request: NextRequest) {
  const { cookies } = request;
  const authToken = cookies.get('session');
  const { pathname } = new URL(request.url);

  // тЬЕ Next.js рж╕рзНржЯрзНржпрж╛ржЯрж┐ржХ ржлрж╛ржЗрж▓ ржПржмржВ API рж░рж┐ржХрзЛрзЯрзЗрж╕рзНржЯ middleware ржерзЗржХрзЗ ржмрж╛ржЗржкрж╛рж╕ ржХрж░рзЛ
  if (
    pathname.startsWith('/_next/') || 
    pathname.startsWith('/static/') || 
    pathname.startsWith('/api/')
  ) {
    return NextResponse.next();
  }

  // ЁЯФ╣ рж▓ржЧрж┐ржи ржирж╛ ржХрж░рж╛ ржерж╛ржХрж▓рзЗ рж╢рзБржзрзБржорж╛рждрзНрж░ '/login' ржПржмржВ '/sign-up' ржкрзЗржЬрзЗ ржпрзЗрждрзЗ ржкрж╛рж░ржмрзЗ
  if (!authToken) {
    if (pathname.startsWith('/login') || pathname.startsWith('/sign-up')) {
      return NextResponse.next();
    }
    return NextResponse.redirect(new URL('/login', request.url));
  }

  // ЁЯФ╣ рж▓ржЧрж┐ржи ржХрж░рж╛ ржерж╛ржХрж▓рзЗ '/login' ржПржмржВ '/sign-up' ржкрзЗржЬрзЗ ржпрзЗрждрзЗ ржкрж╛рж░ржмрзЗ ржирж╛
  if (authToken && (pathname.startsWith('/login') || pathname.startsWith('/sign-up'))) {
    return NextResponse.redirect(new URL('/', request.url)); // or redirect to any other page after login
  }

  // тЬЕ рж▓ржЧрж┐ржи ржХрж░рж╛ ржерж╛ржХрж▓рзЗ рж╕ржм рж░рзБржЯ ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗ
  return NextResponse.next();
}

export const config = {
  matcher: '/:path*',
};
